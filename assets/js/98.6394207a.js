(window.webpackJsonp=window.webpackJsonp||[]).push([[98],{455:function(t,s,a){"use strict";a.r(s);var n=a(8),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"前言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),s("p",[t._v("前段时间在"),s("code",[t._v("linux do")]),t._v("社区，看佬友项目"),s("a",{attrs:{href:"https://github.com/LibreSpark/LibreTV",target:"_blank",rel:"noopener noreferrer"}},[t._v("LibreTV - 免费在线视频搜索与观看平台"),s("OutboundLink")],1),t._v("，有意思，cloudflare搭一个玩玩")]),t._v(" "),s("p",[s("img",{attrs:{src:"/medias/gayfork/1.png",alt:"1"}})]),t._v(" "),s("p",[t._v("最近推给同学使用的过程，发现里面的一些资源节点不能用了（黑木耳等等），我想是不是作者有没有更新，去更新一下。最近刷"),s("code",[t._v("linux do")]),t._v("竟然又刷到作者了，刚好更新一下。")]),t._v(" "),s("p",[s("img",{attrs:{src:"/medias/gayfork/2.png",alt:"2"}})]),t._v(" "),s("h2",{attrs:{id:"过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#过程"}},[t._v("#")]),t._v(" 过程")]),t._v(" "),s("p",[t._v("本来想着删库重新fork的(x)，想了想大佬们一定有更优雅的姿势，学习一下")]),t._v(" "),s("h3",{attrs:{id:"被动同步-网页点击同步按钮"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#被动同步-网页点击同步按钮"}},[t._v("#")]),t._v(" 被动同步：网页点击同步按钮")]),t._v(" "),s("p",[t._v("这里有种简单的被动更新同步姿势，在自己fork的库下，有同步上游仓库的按钮，点击就可以同步了")]),t._v(" "),s("p",[s("img",{attrs:{src:"/medias/gayfork/3.png",alt:"3"}})]),t._v(" "),s("h3",{attrs:{id:"主动同步-github-action定时任务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#主动同步-github-action定时任务"}},[t._v("#")]),t._v(" 主动同步：github action定时任务")]),t._v(" "),s("p",[t._v("第一次接触Github fork同步功能，迫不及待的跟issue区的其他佬友分享(x)")]),t._v(" "),s("p",[s("img",{attrs:{src:"/medias/gayfork/4.png",alt:"4"}})]),t._v(" "),s("p",[t._v("因为我的博客是之前参考大佬主题的自动部署方案，接触过github action，所以简单提了一嘴。作者在项目仓库里竟然已经写好了github workflow的文件，让ai解释一下，直接使用就可以了。")]),t._v(" "),s("div",{staticClass:"language-yaml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Upstream Sync\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("permissions")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("contents")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" write\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("schedule")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cron")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0 4 * * *"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# At 04:00, every day")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("workflow_dispatch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("jobs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("sync_latest_from_upstream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Sync latest commits from upstream repo\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("runs-on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ubuntu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("latest\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" github.event.repository.fork "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("steps")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Step 1: run a standard checkout action")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Checkout target repo\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" actions/checkout@v3\n\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Step 2: run the sync action")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Sync upstream changes\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" sync\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" aormsby/Fork"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("Sync"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("With"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("Upstream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("action@v3.4\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("with")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("upstream_sync_repo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" LibreSpark/LibreTV\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("upstream_sync_branch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" main\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("target_sync_branch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" main\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("target_repo_token")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" secrets.GITHUB_TOKEN "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# automatically generated, no need to set")]),t._v("\n\n          "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Set test_mode true to run tests instead of the true action!!")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("test_mode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("false")]),t._v("\n\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Sync check\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" failure()\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token scalar string"}},[t._v('\n          echo "[Error] Due to a change in the workflow file of the upstream repository, GitHub has automatically suspended the scheduled automatic update. You need to manually sync your fork."\n          exit 1')]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br"),s("span",{staticClass:"line-number"},[t._v("33")]),s("br"),s("span",{staticClass:"line-number"},[t._v("34")]),s("br"),s("span",{staticClass:"line-number"},[t._v("35")]),s("br"),s("span",{staticClass:"line-number"},[t._v("36")]),s("br"),s("span",{staticClass:"line-number"},[t._v("37")]),s("br"),s("span",{staticClass:"line-number"},[t._v("38")]),s("br"),s("span",{staticClass:"line-number"},[t._v("39")]),s("br")])]),s("p",[t._v("解释：")]),t._v(" "),s("ul",[s("li",[t._v("name: 同步上游提交")]),t._v(" "),s("li",[t._v("if: 判断只有仓库是fork的情况下才执行")]),t._v(" "),s("li",[t._v("upstream_sync_repo: 指定上游仓库是 LibreSpark/LibreTV；")]),t._v(" "),s("li",[t._v("upstream_sync_branch: 上游的 main 分支")]),t._v(" "),s("li",[t._v("target_sync_branch: fork的 main 分支；")]),t._v(" "),s("li",[t._v("target_repo_token: 用默认的 GITHUB_TOKEN 来做身份认证；")]),t._v(" "),s("li",[t._v("test_mode: false: 设置为 false 表示这是正式同步，不是测试。")])]),t._v(" "),s("p",[s("strong",[t._v("启用github action")])]),t._v(" "),s("p",[t._v("找到项目的action，启用")]),t._v(" "),s("p",[s("img",{attrs:{src:"/medias/gayfork/5.png",alt:"5"}})]),t._v(" "),s("p",[t._v("找到左侧上游同步，找到"),s("code",[t._v("enable workflow")]),t._v("，启用")]),t._v(" "),s("p",[s("img",{attrs:{src:"/medias/gayfork/6.png",alt:"6"}})]),t._v(" "),s("p",[t._v("手动运行一次workflow，看看是否成功")]),t._v(" "),s("p",[s("img",{attrs:{src:"/medias/gayfork/7.png",alt:"7"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"/medias/gayfork/8.png",alt:"8"}})]),t._v(" "),s("p",[t._v("查看运行细节，成功同步。因为我已经网页手动同步了，这里就没有新的更新需要同步了，所以没有更新。")]),t._v(" "),s("p",[s("img",{attrs:{src:"/medias/gayfork/9.png",alt:"9"}})]),t._v(" "),s("p",[s("strong",[t._v("后续")])]),t._v(" "),s("p",[t._v("接下来，这个github action会每天定时运行，自动同步上游仓库的更新。")]),t._v(" "),s("div",{staticClass:"language-yaml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("schedule")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cron")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0 4 * * *"')]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("定时任务会在每天中午12 （UTC 4 + 8）点定时同步一次，不再需要手动同步")])])}),[],!1,null,null,null);s.default=e.exports}}]);